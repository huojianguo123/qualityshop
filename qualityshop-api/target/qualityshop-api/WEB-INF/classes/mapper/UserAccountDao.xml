<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.qualityshop.dao.UserAccountDao">

    <resultMap type="com.qualityshop.entity.UserAccountEntity" id="userAccountEntity">
        <result property="id" column="id"/>
        <result property="userId" column="userId"/>
        <result property="total_account" column="total_account"/>
        <result property="use_account" column="use_account"/>
        <result property="unuse_account" column="unuse_account"/>
        <result property="create_time" column="create_time"/>
        <result property="state" column="state"/>
    </resultMap>
    <sql id="table_columns">
        id,
        userId,
        total_account,
        use_account,
        unuse_account,
        create_time,
        state
    </sql>
    <sql id="entity_properties">
        #{id},
        #{userId},
        #{total_account},
        #{use_account},
        #{unuse_account},
        #{create_time},
        #{state}
    </sql>

    <insert id="accountInsert" parameterType="com.qualityshop.entity.UserAccountEntity">
        insert into user_account( <include refid="table_columns" /> )
        values ( <include refid="entity_properties" /> )
    </insert>
    <select id="accountGet" resultMap="userAccountEntity" parameterType="String">
        select
        <include refid="table_columns" />
        from user_account
        where userId = #{userId}
    </select>
    <update id="accountUpdate"  parameterType="com.qualityshop.entity.UserAccountEntity">
        update user_account
        <trim prefix="set" suffixOverrides=",">
            <if test="userId != null and userId != ''">userId = #{userId},</if>
            <if test="total_account != null and total_account != ''">total_account = #{total_account},</if>
            <if test="use_account != null and use_account != ''">use_account = #{use_account},</if>
            <if test="unuse_account != null and unuse_account != ''">unuse_account = #{unuse_account},</if>
            <if test="create_time != null">create_time = #{create_time},</if>
            <if test="state != null and state != ''">state = #{state}</if>
        </trim>
        <where>id = #{id}</where>
    </update>
    <delete id="accountDelete" parameterType="String">
        delete from user_account
        where userId = #{userId}
    </delete>
</mapper>